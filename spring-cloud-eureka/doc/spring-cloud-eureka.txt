Spring-Cloud-Eureka

1.简介
Eureka是Netflix公司的分布式开源框架.
Eureka基于rest服务，主要用在AWS云中使用，定位服务来进行中间层服务器的负载均衡和故障转移.
Spring Cloud Eureka封装了Eureka模块来实现服务注册和发现. Eureka采用了C/S设计架构，Eureka Server作为服务注册功能的服务器，是
服务注册中心，其他系统的微服务,使用Eureka Client连接到Eureka Server，并维持心跳连接.
这样系统维护人员就可以通过Eureka Server来监控系统的各个微服务是否正常运行. Spring Cloud的其他模块(例如 Zuul) 就可以通过Eureka Server
来发现系统中的其他微服务，并执行相关的逻辑.

2.服务端
提供服务注册与发现

3.生产者客户端
服务提供方
Eureka 生产者客户端: 连接Eureka服务器，将服务注册到Eureka服务端

4.消费者客户端
服务消费方
Eureka 消费者客户端: 连接Eureka服务器，从Eureka服务端获取服务信息
从Eureka获取注册服务列表，从而能够消费服务.


Eureka环境搭建
1) 引入依赖
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

2) 配置
# Server Properties
# 默认8761端口
server.port=6868
server.address=localhost
server.sessionTimeout=60
# spring boot default contextPath is /
#server.servlet.context-path=/
server.servlet.context-path=/spring-cloud-eureka
spring.application.name=spring-cloud-eureka

eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
# 另外一个Eureka应用，2个Eureka做HA，Eureka的服务路径是 /erreka
eureka.client.serviceUrl.defaultZone=http://localhost:6869/spring-cloud-eureka-replica/eureka
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=127.0.0.1
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.server.enable-self-preservation=false
eureka.server.eviction-interval-timer-in-ms=6000
3) 注解
/* 在启动器上添加 */
@SpringBootApplication(scanBasePackages = {"com.hua"})
// 声明一个Eureka服务
@EnableEurekaServer
@EnableDiscoveryClient
4) 启动
分别启动2个Eureka应用，即spring-cloud-eureka、spring-cloud-eureka-replica
5) 访问
在浏览器输入: 
http://127.0.0.1:6868/spring-cloud-eureka/ 
http://127.0.0.1:6869/spring-cloud-eureka-replica/
可以在 <Instances currently registered with Eureka> 中看到已经注册的实例





