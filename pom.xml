<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hua</groupId>
	<artifactId>spring-cloud-entire</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>spring-cloud-entire</name>
	<description>spring-cloud Maven Entire Project</description>

	<!-- 模块-子项目 -->
	<modules>
		<!-- 模板 -->
		<module>spring-cloud-template</module>
		<module>spring-cloud-actuator</module>
		<module>spring-cloud-core</module>
		<module>spring-cloud-client</module>
		<module>spring-cloud-config</module>
		<module>spring-cloud-config-client</module>
		<module>spring-cloud-config-jdbc</module>
		<module>spring-cloud-config-server</module>
		<module>spring-cloud-eureka</module>
		<module>spring-cloud-feign</module>
		<module>spring-cloud-feign-api</module>
		<module>spring-cloud-feign-provider</module>
		<module>spring-cloud-feign-use</module>
		<module>spring-cloud-function</module>
		<module>spring-cloud-hystrix</module>
		<module>spring-cloud-ribbon</module>
		<module>spring-cloud-redis</module>
		<module>spring-cloud-zuul</module>
		<module>spring-cloud-provider</module>
		<module>spring-cloud-provider-sentinel</module>
		<module>spring-cloud-consumer</module>
		<module>spring-cloud-cluster</module>
		<module>spring-cloud-gateway</module>
		<module>spring-cloud-task</module>
		<module>spring-cloud-test</module>
		<module>spring-cloud-security</module>
		<module>spring-cloud-stream</module>
	</modules>

	<!-- 公共属性 -->
	<properties>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.version>1.0.0</maven.version>
		<maven.plugin.compiler.version>3.3</maven.plugin.compiler.version>
		<maven.plugin.source.version>2.4</maven.plugin.source.version>
		<maven.plugin.surefire.version>2.18.1</maven.plugin.surefire.version>
		<maven.plugin.assembly.version>2.5.5</maven.plugin.assembly.version>
		<maven.plugin.resources.version>2.7</maven.plugin.resources.version>
		<maven.plugin.dependency.version>2.10</maven.plugin.dependency.version>
		<maven.plugin.war.version>3.0</maven.plugin.war.version>
		<spring.cloud.core.version>1.0.0</spring.cloud.core.version>
		<web.version>1.0.0</web.version>
		<spring-boot.version>2.4.3</spring-boot.version>			
		<spring-cloud.version>2020.0.1</spring-cloud.version>
		<spring-cloud-services.version>2.4.1</spring-cloud-services.version>		
		<jackson.version>2.11.1</jackson.version>
		<bucket4j.version>5.0.0-beta.01-09-2020</bucket4j.version>
		<spring-cloud-feign-api.version>1.0.0</spring-cloud-feign-api.version>
		<common.version>1.0.0</common.version>
	</properties>

	<!-- 将依赖放入 dependencyManagement 中 可以解决 spring boot 父级依赖的冲突 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>	 		
		
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- 令牌桶算法 -->
			<dependency>
				<groupId>com.github.vladimir-bukhtoyarov</groupId>
				<artifactId>bucket4j-core</artifactId>
				<version>${bucket4j.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>spring-cloud-feign-api</artifactId>	
				<version>${spring-cloud-feign-api.version}</version>		
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>common</artifactId>
				<version>${common.version}</version>
			</dependency>

			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
		</dependencies>
	</dependencyManagement>

	<!-- 公共构建 -->
	<build>
		<plugins>

			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerVersion>${jdk.version}</compilerVersion>
					<!-- 编译的类文件是否包含调试信息 -->
					<debug>true</debug>
					<!-- 是否展示详细的设置信息 -->
					<detail>true</detail>
					<!-- 指定编译文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 编译失败是否停止 -->
					<failOnError>true</failOnError>
					<!-- 是否强制jdk版本 -->
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<!-- 是否分开执行编译，设置为true会导致部分输出中文乱码 -->
					<fork>false</fork>
					<!-- 输出源码文件名 -->
					<outputFileName>a.jar</outputFileName>
					<!-- 源码位置是否显示过期api被使用 -->
					<showDeprecation>true</showDeprecation>
					<!-- 是否输出编译警告 -->
					<showWarnings>false</showWarnings>
					<!-- 忽略测试 -->
					<skip>true</skip>
					<!-- 是否忽略main源码 -->
					<skipMain>false</skipMain>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<source>${jdk.version}</source>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<target>${jdk.version}</target>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testSource>${jdk.version}</testSource>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testTarget>${jdk.version}</testTarget>
					<!-- 输出编译器详细运行信息 -->
					<verbose>false</verbose>

				</configuration>
			</plugin>

			<!-- 资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<!-- 指定文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 包含空目录 -->
					<includeEmptyDirs>true</includeEmptyDirs>
					<!-- 是否直接覆盖 -->
					<overwrite>true</overwrite>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 打包插件，打包当前项目相关文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- 解决 控制台输出测试信息 - 乱码 -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<reuseForks>true</reuseForks>
					<!-- 打包时跳过单元测试 -->
					<skip>true</skip>
					<skipTests>true</skipTests>
					<!-- 忽略测试失败 -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- 要将源码放上去，需要加入这个插件 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>


</project>